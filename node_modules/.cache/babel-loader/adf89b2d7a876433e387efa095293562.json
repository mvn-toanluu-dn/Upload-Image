{"ast":null,"code":"// import React, { useState } from \"react\";\n// export default function FileUpload() {\n//   const [file, setFile] = useState(\"\");\n//   function handleUpload(event) {\n//     setFile(event.target.files[0]);\n//   }\n//   return (\n//     <div id=\"upload-box\">\n//         <input type=\"file\" onChange={handleUpload} multiple />\n//           <p>Filename: {file.name}</p>\n//           <p>File type: {file.type}</p>\n//           <p>File size: {file.size} bytes</p>\n//           {file && <ImageThumb image={file} />}\n//     </div>\n//   );\n// }\n// const ImageThumb = ({ image }) => {\n//   return <img src={URL.createObjectURL(image)} alt={image.name} />;\n// };\nfunction previewFiles() {\n  const preview = document.querySelector('#preview');\n  const files = document.querySelector('input[type=file]').files;\n\n  function readAndPreview(file) {\n    // Make sure `file.name` matches our extensions criteria\n    if (/\\.(jpe?g|png|gif)$/i.test(file.name)) {\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => {\n        const image = new Image();\n        image.height = 100;\n        image.title = file.name;\n        image.src = this.result;\n        preview.appendChild(image);\n      }, false);\n      reader.readAsDataURL(file);\n    }\n  }\n\n  if (files) {\n    Array.prototype.forEach.call(files, readAndPreview);\n  }\n}","map":{"version":3,"names":["previewFiles","preview","document","querySelector","files","readAndPreview","file","test","name","reader","FileReader","addEventListener","image","Image","height","title","src","result","appendChild","readAsDataURL","Array","prototype","forEach","call"],"sources":["/Users/toan.luu/Desktop/Study/UploadIMG/src/components/upload/index.js"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// export default function FileUpload() {\n//   const [file, setFile] = useState(\"\");\n//   function handleUpload(event) {\n//     setFile(event.target.files[0]);\n\n//   }\n\n//   return (\n//     <div id=\"upload-box\">\n//         <input type=\"file\" onChange={handleUpload} multiple />\n//           <p>Filename: {file.name}</p>\n//           <p>File type: {file.type}</p>\n//           <p>File size: {file.size} bytes</p>\n//           {file && <ImageThumb image={file} />}\n//     </div>\n//   );\n// }\n\n// const ImageThumb = ({ image }) => {\n//   return <img src={URL.createObjectURL(image)} alt={image.name} />;\n// };\nfunction previewFiles() {\n    const preview = document.querySelector('#preview');\n    const files = document.querySelector('input[type=file]').files;\n  \n    function readAndPreview(file) {\n      // Make sure `file.name` matches our extensions criteria\n      if (/\\.(jpe?g|png|gif)$/i.test(file.name)) {\n        const reader = new FileReader();\n  \n        reader.addEventListener(\"load\", () => {\n          const image = new Image();\n          image.height = 100;\n          image.title = file.name;\n          image.src = this.result;\n          preview.appendChild(image);\n        }, false);\n  \n        reader.readAsDataURL(file);\n      }\n    }\n  \n    if (files) {\n      Array.prototype.forEach.call(files, readAndPreview);\n    }\n  }"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,SAASA,YAAT,GAAwB;EACpB,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAhB;EACA,MAAMC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CC,KAAzD;;EAEA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;IAC5B;IACA,IAAI,sBAAsBC,IAAtB,CAA2BD,IAAI,CAACE,IAAhC,CAAJ,EAA2C;MACzC,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;MAEAD,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAM;QACpC,MAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;QACAD,KAAK,CAACE,MAAN,GAAe,GAAf;QACAF,KAAK,CAACG,KAAN,GAAcT,IAAI,CAACE,IAAnB;QACAI,KAAK,CAACI,GAAN,GAAY,KAAKC,MAAjB;QACAhB,OAAO,CAACiB,WAAR,CAAoBN,KAApB;MACD,CAND,EAMG,KANH;MAQAH,MAAM,CAACU,aAAP,CAAqBb,IAArB;IACD;EACF;;EAED,IAAIF,KAAJ,EAAW;IACTgB,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BnB,KAA7B,EAAoCC,cAApC;EACD;AACF"},"metadata":{},"sourceType":"module"}